`define false 1'b 0
`define FALSE 1'b 0
`define true 1'b 1
`define TRUE 1'b 1

`timescale 1 ns / 1 ns // timescale for following modules


//  VHDL Entity R6502_TC.Reg_SP.symbol
// 
//  Created:
//           by - eda.UNKNOWN (TEST)
//           at - 19:25:32 10.02.2009
// 
//  Generated by Mentor Graphics' HDL Designer(TM) 2007.1a (Build 13)
// 

module Reg_SP (
   adr_low_i,
   clk_clk_i,
   ld_low_i,
   ld_sp_i,
   rst_rst_n_i,
   sel_sp_as_i,
   sel_sp_in_i,
   adr_sp_o);
 

input   [7:0] adr_low_i; 
input   clk_clk_i; 
input   ld_low_i; 
input   ld_sp_i; 
input   rst_rst_n_i; 
input   sel_sp_as_i; 
input   sel_sp_in_i; 
output   [15:0] adr_sp_o; 


//  Jens-D. Gutschmidt     Project:  R6502_TC  
//  scantara2003@yahoo.de                      
//  COPYRIGHT (C) 2008-2009 by Jens Gutschmidt and OPENCORES.ORG                                                                                
//                                                                                                                                              
//  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by   
//  the Free Software Foundation, either version 3 of the License, or any later version.                                                        
//                                                                                                                                              
//  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of              
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.                                  
//                                                                                                                                              
//  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.     
//                                                                                                                                              
//  CVS Revisins History                                                                                                                        
//                                                                                                                                              
//  $Log: not supported by cvs2svn $                                                                                                                         
//    <<-- more -->>                                                                                                                            
//  Title:  Stack Pointer Logic  
//  Path:  R6502_TC/Reg_SP/struct  
//  Edited:  by eda on 10 Feb 2009  
// 
//  VHDL Architecture R6502_TC.Reg_SP.struct
// 
//  Created:
//           by - eda.UNKNOWN (TEST)
//           at - 19:25:32 10.02.2009
// 
//  Generated by Mentor Graphics' HDL Designer(TM) 2007.1a (Build 13)
// 
wire    [15:0] adr_sp_o; 

//  Declarations
wire    [7:0] adr_sp_low_o_i; 
wire    load_o_i; 
reg     [7:0] result_low1_o_i; 
reg     [7:0] result_low_o_i; 
wire    sp_as_n_o_i; 
wire    [7:0] val_one; 

//  Implicit buffer signal declarations
wire    [15:0] adr_sp_o_internal; 

//  ModuleWare signal declarations(v1.9) for instance 'U_0' of 'adff'
reg     [7:0] mw_U_0reg_cval; 

//  ModuleWare code(v1.9) for instance 'U_11' of 'addsub'
reg     [8:0]  u_11combo_proc_temp_din0; 
reg     [8:0]  u_11combo_proc_temp_din1; 
reg     [8:0]  u_11combo_proc_temp_sum; 
reg      u_11combo_proc_temp_carry; 


always @(adr_sp_low_o_i or val_one or sp_as_n_o_i)
   begin : u_11combo_proc
   u_11combo_proc_temp_din0 = {1'b 0, adr_sp_low_o_i};   
   u_11combo_proc_temp_din1 = {1'b 0, val_one};   
   u_11combo_proc_temp_carry = 1'b 0;   
   if (sp_as_n_o_i == 1'b 1 | sp_as_n_o_i == 1'b 1)
      begin
      u_11combo_proc_temp_sum = u_11combo_proc_temp_din0 + u_11combo_proc_temp_din1 + u_11combo_proc_temp_carry;   
      end
   else
      begin
      u_11combo_proc_temp_sum = u_11combo_proc_temp_din0 - u_11combo_proc_temp_din1 - u_11combo_proc_temp_carry;   
      end
   result_low_o_i <= u_11combo_proc_temp_sum[7:0];   
   end

//  ModuleWare code(v1.9) for instance 'U_0' of 'adff'
assign adr_sp_o_internal[7:0] = mw_U_0reg_cval; 

always @(clk_clk_i or rst_rst_n_i)
   begin : u_0seq_proc
   if (rst_rst_n_i == 1'b 0 | rst_rst_n_i == 1'b 0)
      begin
      mw_U_0reg_cval <= 8'b 00000000;   
      end
   else if (clk_clk_i /* ignored attribute: 'EVENT */ & clk_clk_i == 1'b 1 )
      begin
      if (load_o_i == 1'b 1 | load_o_i == 1'b 1)
         begin
         mw_U_0reg_cval <= result_low1_o_i;   
         end
      end
   end

//  ModuleWare code(v1.9) for instance 'U_6' of 'and'
assign load_o_i = ld_sp_i & ld_low_i; 

//  ModuleWare code(v1.9) for instance 'U_3' of 'buff'
assign adr_sp_o_internal[15:8] = val_one; 

//  ModuleWare code(v1.9) for instance 'U_4' of 'constval'
assign val_one = 8'b 00000001; 

//  ModuleWare code(v1.9) for instance 'U_2' of 'inv'
assign sp_as_n_o_i = ~sel_sp_as_i; 

//  ModuleWare code(v1.9) for instance 'U_8' of 'mux'

always @(result_low_o_i or adr_low_i or sel_sp_in_i)
   begin : u_8combo_proc
   case (sel_sp_in_i)
   1'b 0,
   1'b 0:
      begin
      result_low1_o_i <= result_low_o_i;   
      end
   1'b 1,
   1'b 1:
      begin
      result_low1_o_i <= adr_low_i;   
      end
   default:
      begin
      result_low1_o_i <= {8{1'b X}};   
      end
   endcase
   end

//  ModuleWare code(v1.9) for instance 'U_10' of 'tap'
assign adr_sp_low_o_i = adr_sp_o_internal[7:0]; 

//  Instance port mappings.
//  Implicit buffered output assignments
assign adr_sp_o = adr_sp_o_internal; 

//  Architecture declarations
//  Internal signal declarations

endmodule // module Reg_SP

